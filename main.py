import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.enums import ParseMode
import logging
import os

BOT_TOKEN = os.getenv("BOT_TOKEN")
PDF_FILE_PATH = "schemes.pdf"

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()
logging.basicConfig(level=logging.INFO)

# --- –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç –∏ –∫–Ω–æ–ø–∫–∏ ---
WELCOME_TEXT = (
    "<b>üíº Gray Kit: C–µ—Ä—ã–µ —Å—Ö–µ–º—ã 2025</b>\n\n"
    "–¢–æ–ø-–º–µ—Ç–æ–¥—ã –∑–∞—Ä–∞–±–æ—Ç–∫–∞, –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞–±–æ—Ç–∞—é—Ç –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å.\n"
    "–ë–µ–∑ –ø–æ–ø—Ä–æ—à–∞–π–Ω–∏—á–µ—Å—Ç–≤–∞. –¢–æ–ª—å–∫–æ –≥–æ—Ç–æ–≤—ã–µ —Ä–µ—à–µ–Ω–∏—è.\n\n"
    "‚ö†Ô∏è –û—Å—Ç–∞–ª–æ—Å—å –≤—Å–µ–≥–æ <b>17 –∫–æ–ø–∏–π</b>. –ü–æ—Ç–æ–º –¥–æ—Å—Ç—É–ø –±—É–¥–µ—Ç –∑–∞–∫—Ä—ã—Ç.\n"
    "–¶–µ–Ω–∞: <b>5 USDT</b> –∏–ª–∏ —ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç –≤ TON."
)

history_text = (
    "üìä <b>–õ–µ–≥–µ–Ω–¥–∞:</b> –≠—Ç–æ—Ç –Ω–∞–±–æ—Ä —Å—Ö–µ–º —Å–æ–±—Ä–∞–Ω –≤—Ä—É—á–Ω—É—é, –æ—Ç—Ä–∞–±–æ—Ç–∞–Ω –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ, —É–ø–∞–∫–æ–≤–∞–Ω –≤ PDF.\n\n"
    "–ï—Å–ª–∏ —Ç—ã —Ö–æ—á–µ—à—å <b>–∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ</b> ‚Äî —ç—Ç–æ —Ç–≤–æ–π —à–∞–Ω—Å.\n"
    "–†–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ –ø—Ä–∏–º–µ–Ω—è–µ—Ç. –ù–µ –¥–ª—è –Ω—ã—Ç–∏–∫–æ–≤."
)

keyboard = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="üí∏ –û–ø–ª–∞—Ç–∏—Ç—å 5 USDT (TRC-20)", url="https://tronscan.org/#/address/TUVCh2u3gqwU8kfwzgjmJMUFPXTneFf9Kk")],
    [InlineKeyboardButton(text="üíé –û–ø–ª–∞—Ç–∏—Ç—å –≤ TON", url="https://tonviewer.com/UQCBoBwjzbgw1eptiMrKbdpmX83al1qlaKFnUvI86zQnW4YP")],
    [InlineKeyboardButton(text="üì• –ü–æ–ª—É—á–∏—Ç—å PDF", callback_data="get_pdf")],
    [InlineKeyboardButton(text="üìñ –ò—Å—Ç–æ—Ä–∏—è", callback_data="history")],
])

# --- –ö–æ–º–∞–Ω–¥—ã ---
@dp.message(commands=["start"])
async def start_cmd(message: types.Message):
    await message.answer(WELCOME_TEXT, reply_markup=keyboard, parse_mode=ParseMode.HTML)

@dp.callback_query(lambda c: c.data == "get_pdf")
async def send_pdf(callback_query: types.CallbackQuery):
    await callback_query.message.answer_document(
        types.FSInputFile(PDF_FILE_PATH),
        caption="üì¶ –í–æ—Ç —Ç–≤–æ–π —Ñ–∞–π–ª. –ù–µ –ø–µ—Ä–µ–¥–∞–≤–∞–π –¥—Ä—É–≥–∏–º.",
    )
    await callback_query.answer()

@dp.callback_query(lambda c: c.data == "history")
async def show_history(callback_query: types.CallbackQuery):
    await callback_query.message.answer(history_text, parse_mode=ParseMode.HTML)
    await callback_query.answer()

# --- –ó–∞–ø—É—Å–∫ ---
async def main():
    await bot.delete_webhook(drop_pending_updates=True)
    await dp.start_polling(bot)

if __name__ == '__main__':
    asyncio.run(main())

import logging
from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.filters import Command
import asyncio
import os

TOKEN = os.getenv("BOT_TOKEN")

bot = Bot(token=TOKEN)
dp = Dispatcher()

kb = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="üì• –ü–æ–ª—É—á–∏—Ç—å PDF", callback_data="get_pdf")],
    [InlineKeyboardButton(text="üí∏ –ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å", url="https://t.me/ltchallengebot")],
    [InlineKeyboardButton(text="üìä –ò—Å—Ç–æ—Ä–∏—è", callback_data="history")],
    [InlineKeyboardButton(text="üì§ –†–∞—Å—à–∞—Ä–∏—Ç—å", switch_inline_query="üî• –ß–µ–ª–ª–µ–Ω–¥–∂ –æ—Ç –ì—Ä–µ—è")],
    [InlineKeyboardButton(text="üöÄ –î—Ä—É–≥–∏–µ —Å—Ö–µ–º—ã", url="https://t.me/GrayKitBot")]
])

@dp.message(Command("start"))
async def start_handler(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –±–æ—Ç GrayKit. –í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∏–∂–µ:", reply_markup=kb)

@dp.callback_query(lambda c: c.data == "get_pdf")
async def send_pdf(callback_query: types.CallbackQuery):
    await callback_query.message.answer_document(types.FSInputFile("graykit.pdf"))

@dp.callback_query(lambda c: c.data == "history")
async def show_history(callback_query: types.CallbackQuery):
    await callback_query.message.answer("–ò—Å—Ç–æ—Ä–∏—è —Å–∫–æ—Ä–æ –ø–æ—è–≤–∏—Ç—Å—è.")

async def main():
    logging.basicConfig(level=logging.INFO)
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())

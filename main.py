import os
import asyncio
from aiogram import Bot, Dispatcher, types, F
from aiogram.enums import ParseMode
from aiogram.filters import Command
from aiogram.types import (
    InlineKeyboardMarkup,
    InlineKeyboardButton,
    FSInputFile,
)

TOKEN = os.getenv("BOT_TOKEN")
bot = Bot(token=TOKEN, parse_mode=ParseMode.HTML)
dp = Dispatcher()

# üìå –ö–Ω–æ–ø–æ—á–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
main_keyboard = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="üìú –ò—Å—Ç–æ—Ä–∏—è", callback_data="history")],
    [InlineKeyboardButton(text="üí∏ –ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å", url="https://t.me/GrayKitBot")],  # –º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å —Å—Å—ã–ª–∫—É
    [InlineKeyboardButton(text="üìÑ PDF", callback_data="pdf")],
])

# üü¢ /start
@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    await message.answer(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø—Ä–æ–µ–∫—Ç GrayKitBot!\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ üëá",
        reply_markup=main_keyboard
    )

# üîÅ –û–±—Ä–∞–±–æ—Ç–∫–∞ callback-–∫–Ω–æ–ø–æ–∫
@dp.callback_query(F.data == "history")
async def show_history(callback: types.CallbackQuery):
    text = (
        "<b>üìú –ò—Å—Ç–æ—Ä–∏—è —á–µ–ª–ª–µ–Ω–¥–∂–∞:</b>\n\n"
        "–Ø –∑–∞–ø—É—Å—Ç–∏–ª –∞–Ω–æ–Ω–∏–º–Ω—ã–π —á–µ–ª–ª–µ–Ω–¥–∂ –ø–æ —Å–±–æ—Ä—É —Å—Ä–µ–¥—Å—Ç–≤. "
        "–ö–∞–∂–¥—ã–π –¥–æ–Ω–∞—Ç ‚Äî —à–∞–≥ –±–ª–∏–∂–µ –∫ —Ü–µ–ª–∏. "
        "–ò—Å—Ç–æ—Ä–∏—è –±—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª—è—Ç—å—Å—è –∑–¥–µ—Å—å."
    )
    await callback.message.answer(text)
    await callback.answer()

@dp.callback_query(F.data == "pdf")
async def send_pdf(callback: types.CallbackQuery):
    try:
        pdf_path = "challenge.pdf"  # –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –¥–æ–ª–∂–Ω–æ —Å–æ–≤–ø–∞–¥–∞—Ç—å
        pdf_file = FSInputFile(pdf_path)
        await callback.message.answer_document(pdf_file, caption="üìÑ –í–æ—Ç —Ñ–∞–π–ª —á–µ–ª–ª–µ–Ω–¥–∂–∞")
    except FileNotFoundError:
        await callback.message.answer("–§–∞–π–ª PDF –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª 'challenge.pdf' –≤ –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞.")
    await callback.answer()

# üì§ /share
@dp.message(Command("share"))
async def share_cmd(message: types.Message):
    share_text = (
        "üö® –ù–æ–≤—ã–π —á–µ–ª–ª–µ–Ω–¥–∂! üö®\n\n"
        "–ü–æ–¥–¥–µ—Ä–∂–∏ –ø—Ä–æ–µ–∫—Ç GrayKit ‚Äî –∞–Ω–æ–Ω–∏–º–Ω–æ, –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Å–ª–æ–≤.\n"
        "üëâ https://t.me/GrayKitBot\n\n"
        "#–¥–æ–Ω–∞—Ç #—á–µ–ª–ª–µ–Ω–¥–∂ #–∞–Ω–æ–Ω–∏–º–Ω–æ"
    )
    await message.answer(share_text)

# üîÅ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())

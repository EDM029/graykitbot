
import asyncio
import logging
import random
from aiogram import Bot, Dispatcher, F
from aiogram.types import Message, CallbackQuery, FSInputFile
from aiogram.filters import CommandStart
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
import os

BOT_TOKEN = os.getenv("BOT_TOKEN")

logging.basicConfig(level=logging.INFO)
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# ---- –õ–æ–∂–Ω—ã–π —Å—á—ë—Ç—á–∏–∫ ----
fake_buyers = random.randint(173, 286)

# ---- –ö–Ω–æ–ø–∫–∏ ----
menu = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="üìñ –ò—Å—Ç–æ—Ä–∏—è", callback_data="history")],
    [InlineKeyboardButton(text="üìÑ –ü–æ–ª—É—á–∏—Ç—å PDF (5 USDT –∏–ª–∏ —ç–∫–≤. –≤ TON)", callback_data="get_pdf")],
    [
        InlineKeyboardButton(text="üí∏ –û–ø–ª–∞—Ç–∏—Ç—å TON", url="https://t.me/GrayKitBot?start=ton"),
        InlineKeyboardButton(text="üí∏ –û–ø–ª–∞—Ç–∏—Ç—å USDT", url="https://t.me/GrayKitBot?start=usdt")
    ],
])

# ---- –û–ø–∏—Å–∞–Ω–∏–µ —Å—Ç–∞—Ä—Ç–∞ ----
welcome_text = f"""
üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ *GrayKitBot* ‚Äî —Ç–≤–æ–π –¥–æ—Å—Ç—É–ø –∫ —Å–ª–∏–≤—É —Å–∞–º—ã—Ö üî• —Ä–∞–±–æ—á–∏—Ö —Å–µ—Ä—ã—Ö —Å—Ö–µ–º 2025 –≥–æ–¥–∞.

üîê *PDF-–¥–æ–∫—É–º–µ–Ω—Ç* —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–µ—Ä—ã–π –ª–µ–Ω–¥–∏–Ω–≥, –ø–æ—à–∞–≥–æ–≤—ã–π –∑–∞–ø—É—Å–∫, –∞–≤—Ç–æ–≤–æ—Ä–æ–Ω–∫—É –∏ –≥–æ—Ç–æ–≤—ã–µ —Ç–µ–∫—Å—Ç—ã. –í—Å—ë, —á—Ç–æ–±—ã –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å üí∏.

üí• *{fake_buyers} –∫–æ–ø–∏–π —É–∂–µ –∫—É–ø–ª–µ–Ω–æ!* –û—Å—Ç–∞–ª–æ—Å—å *{random.randint(4, 11)}* —à—Ç—É–∫ –ø–æ 5 USDT.

üëá –ù–∞–∂–º–∏, —á—Ç–æ–±—ã –∫—É–ø–∏—Ç—å ‚Üì
"""

# ---- –ö–æ–º–∞–Ω–¥–∞ /start ----
@dp.message(CommandStart())
async def start(message: Message):
    await message.answer(welcome_text, reply_markup=menu, parse_mode="Markdown")

# ---- –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ ----
@dp.callback_query(F.data == "history")
async def history(call: CallbackQuery):
    await call.answer()
    await call.message.answer("üß† *–ò—Å—Ç–æ—Ä–∏—è*: –Ø –≤—Å—ë –ø–æ—Ç–µ—Ä—è–ª. –ü–æ—Å–ª–µ–¥–Ω—è—è –ø–æ–ø—ã—Ç–∫–∞. –ï—Å–ª–∏ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç ‚Äî —É–¥–∞–ª—é —Ç–µ–ª–µ–≥—É –∏ —Å–¥–∞–º –Ω–æ—É—Ç–±—É–∫ –≤ –ª–æ–º–±–∞—Ä–¥.\n\n–Ø –Ω–µ –ø—Ä–æ—à—É –¥–µ–Ω–µ–≥. –Ø –¥–∞—é —Å—Ö–µ–º—É. –¢–æ–ª—å–∫–æ –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ —Ä–µ—à–∏—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å.", parse_mode="Markdown")

@dp.callback_query(F.data == "get_pdf")
async def get_pdf(call: CallbackQuery):
    await call.answer()
    await call.message.answer("üö´ PDF-–¥–æ–∫—É–º–µ–Ω—Ç –¥–æ—Å—Ç—É–ø–µ–Ω *—Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã 5 USDT –∏–ª–∏ TON*. –ù–∞–∂–º–∏ –Ω—É–∂–Ω—É—é –∫–Ω–æ–ø–∫—É –¥–ª—è –æ–ø–ª–∞—Ç—ã.", parse_mode="Markdown")

# ---- –ö–æ–º–∞–Ω–¥–∞ /share ----
@dp.message(F.text == "/share")
async def share(message: Message):
    await message.answer("üí£ –ü–æ–¥–µ–ª–∏—Å—å —ç—Ç–∏–º –±–æ—Ç–æ–º —Å –¥—Ä—É–≥–æ–º, –∫–æ—Ç–æ—Ä–æ–º—É —Ç–æ–∂–µ –Ω—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å—Å—è –∏–∑ –∑–∞–¥–Ω–∏—Ü—ã:\n\nhttps://t.me/GrayKitBot")

# ---- –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ----
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
